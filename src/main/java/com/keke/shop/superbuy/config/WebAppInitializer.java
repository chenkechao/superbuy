package com.keke.shop.superbuy.config;import org.springframework.web.context.WebApplicationContext;import org.springframework.web.filter.CharacterEncodingFilter;import org.springframework.web.filter.DelegatingFilterProxy;import org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;import javax.servlet.*;public class WebAppInitializer extends AbstractAnnotationConfigDispatcherServletInitializer {    @Override    protected String[] getServletMappings() {        return new String[]{"/"};    }    @Override    protected Class<?>[] getRootConfigClasses() {        return new Class<?>[] {ApplicationConfig.class, JpaConfig.class, SecurityConfig.class};    }    @Override    protected Class<?>[] getServletConfigClasses() {        return new Class<?>[] {WebMvcConfig.class};    }    @Override    protected Filter[] getServletFilters() {        CharacterEncodingFilter characterEncodingFilter = new CharacterEncodingFilter();        characterEncodingFilter.setEncoding("UTF-8");        characterEncodingFilter.setForceEncoding(true);        DelegatingFilterProxy securityFilterChain = new DelegatingFilterProxy("springSecurityFilterChain");        //return new Filter[] {characterEncodingFilter, securityFilterChain};        return new Filter[] {characterEncodingFilter};    }    @Override    protected void customizeRegistration(ServletRegistration.Dynamic registration) {        registration.setInitParameter("defaultHtmlEscape", "true");        registration.setInitParameter("spring.profiles.active", "default");    }        /*     * 创建一个可以在非spring管理bean中获得spring管理的相关bean的对象：CP_SpringContext.getBean(String beanName)     */	@Override	protected WebApplicationContext createRootApplicationContext() {		WebApplicationContext ctx = super.createRootApplicationContext();		return ctx;	}}